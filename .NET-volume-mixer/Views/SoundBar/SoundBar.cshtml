@model List<WebApplication3.Controllers.SoundBarController.AppId>;


@{
}

<div id="soundSliders">
    @foreach (var app in Model)
    {
        <div>
            <input type="range" id="VolumeIn_@app.Id" name="volume" min="0" max="100" step="1" style="width:50vw" value="@app.Vol"/>
            <label for="@app.Id">@app.Name: <output id="VolumeLab_@app.Id"></output></label>
        </div>
    }
</div>
<button onclick="sendUpdateRequest()">update sessions</button>

@foreach (var app in Model)
{
    <div>
            <!--img src="/SoundBar/icon/0" alt="Ikona procesu"-->
    </div>
}

<script type="text/javascript">
    var apps = @Html.Raw(Json.Serialize(Model));
    let isRequestInProgress = false;
    let pendingValue = null;

    function sendVolumeChange(id, volume) {
        var tosend = [{ "Id": id, "Vol": volume }];
        isRequestInProgress = true;

        $.ajax({
            type: "POST",
            url: '/SoundBar/ChangeVolume',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(tosend),
            success: function (response) {},
            error: function (jqXHR, textStatus, errorThrown) {
                console.log("Error:", jqXHR.status, jqXHR.responseText);
            },
            complete: function () {
                isRequestInProgress = false;
                if (pendingValue !== null) {
                    // Wysyłamy oczekującą wartość
                    let nextValue = pendingValue;
                    pendingValue = null;
                    sendVolumeChange(nextValue.id, nextValue.vol);
                }
            }
        });
    }

    apps.forEach((app) => {
        document.querySelector('#VolumeLab_' + app['id']).textContent = app['vol'];
        document.querySelector('#VolumeIn_' + app['id']).addEventListener("input", (event) => {
            let volume = event.target.value;
            document.querySelector('#VolumeLab_' + app['id']).textContent = volume;
            if (!isRequestInProgress) {
                sendVolumeChange(app['id'], volume);
            } else {
                // Jeśli żądanie jest w toku, przechowujemy ostatnią wartość, którą chcemy wysłać
                pendingValue = { id: app['id'], vol: volume };
            }
        });
    });

    function escapeHtml(text) {
        return text.replace(/</g, "&lt;").replace(/>/g, "&gt;");
    }
    function sendUpdateRequest() {
        $.ajax({
            type: "GET",
            url: '/SoundBar/UpdateSessions',
            success: function (response) { 
                console.log(response);
                var parsedResponse = JSON.parse(response);
                var newSessions = "";
            
                for (let i = 0; i < parsedResponse.length; i++) {
                    newSessions += `<div>
                        <input type="range" id="VolumeIn_${parsedResponse[i]['Id']}" name="volume" min="0" max="100" step="1" style="width:50vw" value="${parsedResponse[i]['Vol']}"/>
                        <label for="${parsedResponse[i]['Id']}">${escapeHtml(parsedResponse[i]['Name'])}: 
                        <output id="VolumeLab_${parsedResponse[i]['Id']}">${parsedResponse[i]['Vol']}</output>
                        </label>
                    </div>`;
                }

                document.getElementById("soundSliders").innerHTML = newSessions;

                
                parsedResponse.forEach((app) => {
                    document.querySelector(`#VolumeIn_${app['Id']}`).addEventListener("input", (event) => {
                        let volume = event.target.value;
                        document.querySelector(`#VolumeLab_${app['Id']}`).textContent = volume;
                        if (!isRequestInProgress) {
                            sendVolumeChange(app['Id'], volume);
                        } else {
                            pendingValue = { id: app['Id'], vol: volume };
                        }
                    });
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log("Error:", jqXHR.status, jqXHR.responseText);
            }
        });
    }

</script>
